{"version":3,"file":"static/js/812.cd9db12d.chunk.js","mappings":"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","sources":["components/MovieDetails/MovieDetails.styled.jsx","components/MovieDetails/MovieDetails.jsx","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","services/api.js"],"sourcesContent":["import styled from '@emotion/styled';\nimport { Link, NavLink } from 'react-router-dom';\n\nexport const MovieDetailsContainer = styled.section`\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n  padding: 10px;\n`;\n\nexport const LinkBtn = styled(NavLink)`\n  font-size: 18px;\n  color: #547866;\n  text-decoration: none;\n`;\n\nexport const MovieReviewContainer = styled.div`\n  display: flex;\n  gap: 20px;\n  padding: 20px 0;\n  border-bottom: 2px solid #552486;\n`;\n\nexport const MovieInfoContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n`;\n\nexport const MovieTitle = styled.h2`\n  font-size: 30px;\n`;\n\nexport const MovieSubTitle = styled.h3`\n  font-size: 20px;\n`;\n\nexport const MovieText = styled.p`\n  font-size: 16px;\n`;\n\nexport const MovieList = styled.ul`\n  display: flex;\n  flex-direction: column;\n  gap: 5px;\n`;\n\nexport const MovieListItem = styled.li`\n  list-style: none;\n`;\n\nexport const MovieAdditionalLink = styled(Link)`\n  font-size: 16px;\n  color: #55f;\n  text-decoration: none;\n`;\n","import { useEffect, useRef, useState } from 'react';\nimport { useParams, useLocation, Outlet } from 'react-router-dom';\n\nimport { searchMovieById } from '../../services/api';\nimport noPoster from './noPoster.jpg';\n\nimport {\n  MovieDetailsContainer,\n  LinkBtn,\n  MovieReviewContainer,\n  MovieInfoContainer,\n  MovieTitle,\n  MovieSubTitle,\n  MovieText,\n  MovieList,\n  MovieListItem,\n  MovieAdditionalLink,\n} from 'components/MovieDetails/MovieDetails.styled';\n\nconst MovieDetails = () => {\n  const [movie, setMovie] = useState({});\n  const { movieId } = useParams();\n  const location = useLocation();\n  const prePage = useRef(location?.state?.from ?? '/movies');\n\n  useEffect(() => {\n    searchMovieById(movieId)\n      .then(setMovie)\n      .catch(error => console.log(error));\n  }, [movieId]);\n\n  return (\n    <MovieDetailsContainer>\n      <LinkBtn to={prePage.current}>Go back</LinkBtn>\n      {Object.keys(movie).length > 0 && (\n        <MovieReviewContainer>\n          {movie.poster_path !== null ? (\n            <img\n              src={`https://image.tmdb.org/t/p/w500${movie.poster_path}`}\n              alt={movie.title}\n              width=\"300\"\n            />\n          ) : (\n            <img src={noPoster} alt=\"No poster\" width=\"300\" />\n          )}\n\n          <MovieInfoContainer>\n            <MovieTitle>{movie.title}</MovieTitle>\n            <MovieText>User Score: {movie.vote_average.toFixed(0)}%</MovieText>\n\n            <MovieSubTitle>Overview</MovieSubTitle>\n            <MovieText>{movie.overview}</MovieText>\n\n            <MovieSubTitle>Genres</MovieSubTitle>\n            <MovieText>\n              {movie.genres.map(({ name }) => name).join(', ')}\n            </MovieText>\n\n            <MovieSubTitle>Additional information</MovieSubTitle>\n            <MovieList>\n              <MovieListItem>\n                <MovieAdditionalLink to=\"cast\">Cast</MovieAdditionalLink>\n              </MovieListItem>\n              <MovieListItem>\n                <MovieAdditionalLink to=\"reviews\">Reviews</MovieAdditionalLink>\n              </MovieListItem>\n            </MovieList>\n          </MovieInfoContainer>\n        </MovieReviewContainer>\n      )}\n\n      <Outlet />\n    </MovieDetailsContainer>\n  );\n};\n\nexport default MovieDetails;\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n      args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n      _next(undefined);\n    });\n  };\n}","export const getTrendingMovies = async () => {\n  const response = await fetch(\n    `https://api.themoviedb.org/3/trending/movie/day?api_key=4bd59f0f8930e77f5872cb5fba23dbde`\n  );\n  const data = await response.json();\n  return data.results;\n};\n\nexport const searchMoviesByQuery = async query => {\n  const response = await fetch(\n    `https://api.themoviedb.org/3/search/movie?api_key=4bd59f0f8930e77f5872cb5fba23dbde&query=${query}`\n  );\n  const data = await response.json();\n  return data.results;\n};\n\nexport const searchMovieById = async id => {\n  const response = await fetch(\n    `https://api.themoviedb.org/3/movie/${id}?api_key=4bd59f0f8930e77f5872cb5fba23dbde`\n  );\n  const data = await response.json();\n  return data;\n};\n\nexport const getMovieCredits = async id => {\n  const response = await fetch(\n    `https://api.themoviedb.org/3/movie/${id}/credits?api_key=4bd59f0f8930e77f5872cb5fba23dbde`\n  );\n  const data = await response.json();\n  return data.cast;\n};\n\nexport const getMovieReviews = async movieId => {\n  const response = await fetch(\n    `https://api.themoviedb.org/3/movie/${movieId}/reviews?api_key=4bd59f0f8930e77f5872cb5fba23dbde`\n  );\n  const data = await response.json();\n  return data.results;\n};\n"],"names":["MovieDetailsContainer","styled","LinkBtn","NavLink","MovieReviewContainer","MovieInfoContainer","MovieTitle","MovieSubTitle","MovieText","MovieList","MovieListItem","MovieAdditionalLink","Link","useState","movie","setMovie","movieId","useParams","location","useLocation","prePage","useRef","state","from","useEffect","searchMovieById","then","catch","error","console","log","to","current","Object","keys","length","poster_path","src","alt","title","width","noPoster","vote_average","toFixed","overview","genres","map","name","join","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","done","Promise","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined","getTrendingMovies","fetch","response","json","data","results","searchMoviesByQuery","query","id","getMovieCredits","cast","getMovieReviews"],"sourceRoot":""}